// <auto-generated />
using System;
using System.Collections.Generic;
using JobGuard.Infrastructure.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobGuard.Infrastructure.Postgres.Migrations
{
    [DbContext(typeof(PostgresAppDbContext))]
    [Migration("20241004212453_AddVerificationAndVacancyDetailsSchema")]
    partial class AddVerificationAndVacancyDetailsSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobGuard.Domain.Entities.DataPiece", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VerificationId")
                        .HasColumnType("uuid")
                        .HasColumnName("verification_id");

                    b.HasKey("Id");

                    b.HasIndex("VerificationId");

                    b.ToTable("data_pieces", (string)null);
                });

            modelBuilder.Entity("JobGuard.Domain.Entities.VacancyDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("ApplicationDeadline")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("application_deadline");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmploymentType")
                        .HasColumnType("text")
                        .HasColumnName("employment_type");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("job_description");

                    b.Property<string>("JobLocation")
                        .HasColumnType("text")
                        .HasColumnName("job_location");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("job_title");

                    b.Property<DateTimeOffset>("PostedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("posted_date");

                    b.Property<string>("SalaryRange")
                        .HasColumnType("text")
                        .HasColumnName("salary_range");

                    b.Property<List<string>>("_dataSources")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("data_sources");

                    b.Property<string>("_qualifications")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("qualifications");

                    b.Property<string>("_responsibilities")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("responsibilities");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("vacancy_details", (string)null);
                });

            modelBuilder.Entity("JobGuard.Domain.Entities.Verification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ProvidedDetails")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("provided_details");

                    b.Property<string>("ShortId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("_providedLinks")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("provided_links");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ShortId")
                        .IsUnique();

                    b.ToTable("verifications", (string)null);
                });

            modelBuilder.Entity("JobGuard.Domain.Entities.DataPiece", b =>
                {
                    b.HasOne("JobGuard.Domain.Entities.Verification", null)
                        .WithMany("DataPieces")
                        .HasForeignKey("VerificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobGuard.Domain.Entities.Verification", b =>
                {
                    b.Navigation("DataPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
